C51 COMPILER V9.55   MAIN                                                                  05/11/2021 12:40:06 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Function\main\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Function\Be
                    -ep;.\Function\I2C;.\Function\LCD12864;.\Function\main;.\Function\MLX90614;.\Function\RC522;.\Function\System) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          //影隐劫(ZGT)
   2          /**************************************************************************************
   3          
   4          现象：
   5          
   6          注意事项：      
   7          STC89C52的资源利用情况
   8          LCD12864占用引脚：
   9                    P1^0   ------>    LCD_RS
  10                    P1^1   ------>    LCD_RW
  11                    P1^2   ------>    LCD_EN
  12                    P1^3   ------>    LCD_PSB
  13                    P0的所有引脚作为数据并行传输口
  14          蜂鸣器占用:P1.4(低电平触发，蜂鸣器为有源蜂鸣器)
  15          LED提示灯占用：
  16                    P1.5   ------> RED(低电平触发)
  17                    P1.6   ------> GREEN(低电平触发)
  18          I2C部分：
  19                    P2^0   ------> I2C的SDA线
  20                    P2^1   ------> I2C的SCL线
  21                    I2C上直接连接着红外测温模块
  22          SPI部分： 
  23                    P2^7   ------>    RST
  24                    P2^2   ------>    NSS
  25                    P2^4   ------>    SCK
  26                    P2^5   ------>    MOSI
  27                    P2^6   ------>    MISO
  28          开关占用：
  29                    P3.2   ------>    SW1，对应外部中断0
  30                    P3.3   ------>    SW2，对应外部中断1
  31          定时器部分：占用了定时器1为串口提供9600波特率          
  32                      占用了定时器0每次溢出计时10ms，用于作为连接超时的标志
  33          
  34          串口部分：占用了定时器1并设置波特率为9600
  35          使用了的信息头：Wi-Fi接收校园卡信息前会发送0xaa,0x55,0x99,0x99表示其准备就绪
  36                          51发送校园卡号“0xbb,校园卡号,0xcc”
  37                          51发送体温信息“0xdd,体温数据,0xee”
  38                          温度传输情况，{0xaa,0xbb,0x88,0x88}{0xaa,0xbb,0x77,0x77}88是传输成功，77是传输失败
  39                          接收联网状态，{0xaa,0x44,0x88,0x88}{0xaa,0x44,0x77,0x77}88是联网，77是断网
  40                          HTTP请求结果，{0xaa,0x66,0x88,0x88}{0xaa,0x66,0x77,0x77}88是成功，77是失败
  41          LED和蜂鸣器叫声：
  42                  寻卡成功并读出了卡号       ――响一声500ms
  43                  寻卡成功后wifi响应超时     ――响三声间隔1S 
  44                  可以开始检测体温           ――响一声500ms且绿灯常亮
  45                  读取到体温数据             ――响一声500ms
  46                  测温上传失败               ――响三声间隔1S
  47                  体温异常                   ――响10声间隔1S红灯常亮可以按按键SW2解除
  48                  数据上传成功               ――响两声间隔500ms
  49                  数据上传失败               ――响四声间隔1SLED跟着闪烁后红灯常亮
  50                  
  51          影隐劫(ZGT)                     
  52          ***************************************************************************************/
  53          #include "main.h"
C51 COMPILER V9.55   MAIN                                                                  05/11/2021 12:40:06 PAGE 2   

  54          
  55          /*********************定义全局变量*********************************/
  56          /*------------红外体温监测相关变量------------*/
  57          unsigned char Temp_Time;//定义一个用于测温倒计时
  58          unsigned char Temp_Hex[3];//定义存储温度的数组方便串口发送
  59          float Temp_Flo = 0;//定义浮点型存储温度方便LCD显示
  60          unsigned char Temp_SDFlag = 0;//温度传输标志位，为1时传输成功，为2时传输失败
  61          /*------------RFID相关变量------------*/
  62          unsigned char g_ucTempbuf[20];//用于存储RFID卡的基本信息
  63          
  64          unsigned char Password_A[6] = {0xff,0xff,0xff,0xff,0xff,0xff};//存储RFID卡的A密码
  65          unsigned char Data_Read[16];//用于存储从RFID一个块中读出来的信息
  66          unsigned char Data_ASCII[32];//用于将RFID读取到的卡号数据转化为对应的ASCII码
  67          unsigned char ASCII[2];//用于暂时缓存转化好的一个ASCII码值
  68          /*------------定时器0相关变量------------*/
  69          unsigned char Timer0_1S_Flag;//当该标志位每增加1时说明定时器0计数1秒
  70          unsigned char Timer0_1S;//设置一个定时器0计数1S的计数变量
  71          
  72          /*------------串口通信相关变量------------*/
  73          //用于串口发送卡号信息
  74          unsigned char UART_Send_STNum[34] = {0xbb,0x00,
  75                                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  76                                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  77                                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  78                                               0x00,0xcc};
  79          //用于串口发送体温信息
  80          unsigned char UART_Send_Temp[5] = {0xdd,
  81                                          0x00,0x00,0x00,
  82                                              0xee};
  83          unsigned char code SdData_Red[4] = {0xaa,0x55,0x99,0x99};
  84          
  85          //接收信息头相关
  86          unsigned char UART_BUF[4];//串口信息头数据缓存区                              
  87          unsigned char UART_Receive_Red = 0;//接收准备信号,信息头{0xaa,0x55,0x99,0x99}
  88          unsigned char UART_Receive_CON = 0;//接收联网状态，{0xaa,0x44,0x88,0x88}88是联网标志位置1
  89                                                       //{0xaa,0x44,0x77,0x77}77是断网标志位置0
  90          unsigned char UART_HTTP_FLAG = 0;//HTTP响应标志位，当HTTP未响应为0，响应成功为1，响应失败为2
  91          /*------------LCD12864显示相关变量------------*/  
  92          unsigned char LCD_TipWord_1[16];//作为LCD显示一行的缓存区
  93          unsigned char LCD_Flag = 0;//定义一个标志位防止程序不停刷新LCD
  94          void main()
  95          {
  96   1          unsigned char status,i;//status用于存储RFID每一步的结果状态，i和j用于各种for循环
  97   1          
  98   1          lcd12864_parallel_init();//初始化LCD12864   
  99   1          PcdInit();//初始化RC522
 100   1          Uart_init();//串口初始化
 101   1          Timer0_Init();//初始化定时器0
 102   1          lcd12864_Clean();//清屏
 103   1          lcd12864_parallel_pos(1,1);//LCD显示定位
 104   1          lcd12864_parallel_string("初始化完成！");//打印提示语句初始化完成
 105   1          Delay_Ms_(1000);//延时一秒只为提示语句能被看见
 106   1          lcd12864_Clean();//清屏
 107   1              while(1)//进入程序大循环
 108   1          {
 109   2              while(1)
 110   2              {
 111   3                  if(LCD_Flag == 0)//说明卡已拿走，刷新LCD
 112   3                  {
 113   4                      LCD_Flag = 1;//改变显示标志位防止重复刷新
 114   4                      LCD12864_Display(0,0,0,"寻卡。。");//LCD上打印提示语
 115   4                      if(UART_Receive_CON == 0)
C51 COMPILER V9.55   MAIN                                                                  05/11/2021 12:40:06 PAGE 3   

 116   4                      {LCD12864_Display(1,3,0,"网络已中断");}
 117   4                      else
 118   4                      {LCD12864_Display(1,3,0,"网络已连接");}
 119   4                  }
 120   3                  /************************RFID读取卡内信息的过程************************/            
 121   3                  //集成寻卡、防冲撞、选定卡片和验证卡密
 122   3                  status = RC522_FindCard(g_ucTempbuf,PICC_AUTHENT1A,0,Password_A);
 123   3                  if(status == MI_OK)//如果上面的验证都通过了
 124   3                  {                
 125   4                      //读取块0
 126   4                      status = PcdRead(0,Data_Read);
 127   4                      if (status != MI_OK)//判断读取是否出错
 128   4                      {continue;}
 129   4                      
 130   4                      LCD_Flag = 1;//寻卡的验证都通过了故LCD还是不显示寻卡中
 131   4                      for(i = 0;i < 16;i++)
 132   4                      {                           
 133   5                          HexToChar(Data_Read[i],ASCII);//将数据的每一个值转化为ASCII码                    
 134   5                          Data_ASCII[2*i] = ASCII[0];
 135   5                          Data_ASCII[(( (i+1) *2) - 1)] = ASCII[1];//将转换好的ASCII码存储在缓存区              
             -                           
 136   5                      }
 137   4                      for(i = 0;i < 32;i++)//将卡号信息放在串口发送缓存区
 138   4                      {UART_Send_STNum[i+1] = Data_ASCII[i];}   
 139   4                      UART_SendString(4,SdData_Red);//告诉WiFi51已经准备好了                
 140   4                  }
 141   3                  else//由于出错了就不用执行下面的步骤了直接重来
 142   3                  {continue;}
 143   3                                    
 144   3                  /************************为校园卡数据添加信息头和结束符后通过串口发送************************/
             -            
 145   3                  Timer0_1S = 0;
 146   3                  Timer0_1S_Flag = 0;
 147   3                  Delay_Ms_(10);//操作定时器前，将其标志位置0后稍微延时后再开启定时器能减少其出错概率
 148   3                  TR0 = 1;//开启定时器1
 149   3                  while(UART_Receive_Red != 0x99 && Timer0_1S_Flag < 5);//只有WiFi发送准备好的信号才发送串口数据
             -限时1S
 150   3                  TR0 = 0;//使用完后关闭定时器           
 151   3                  Timer0_Init();
 152   3                  
 153   3                  if(UART_Receive_Red == 0x99)//判断是不是接收到准备好的信号才跳出了循环
 154   3                  {
 155   4                      UART_Receive_Red = 0;//清除串口接收标志位
 156   4                      LCD12864_Display(1,0,0,"寻卡成功");
 157   4                      LCD12864_Display(1,1,0,"WiFi响应成功");
 158   4                      UART_SendString(34,UART_Send_STNum);//通过串口发送学号信息到WiFi
 159   4                  }
 160   3                  else//说明超时了，下面的就不用执行了，重新寻卡
 161   3                  {
 162   4                      UART_Receive_Red = 0;
 163   4                      LCD12864_Display(1,0,0,"寻卡。。");
 164   4                      LCD12864_Display(1,1,0,"WiFi响应超时");
 165   4                      Beep_Start(3,1000);//让蜂鸣器响3声间隔1S  
 166   4                      LCD_Flag = 0;//程序执行完毕刷新LCD改变标志位
 167   4                      continue;
 168   4                  }            
 169   3                  LED_GREEN = 0;//提示用户可以开始测体温
 170   3                  Beep_Start(1,500);//让蜂鸣器响500ms
 171   3                  
 172   3                  /************************以下为红外体温监测的代码************************/
 173   3                  LCD12864_Display(1,2,0,"靠近测温:");  
 174   3                  
C51 COMPILER V9.55   MAIN                                                                  05/11/2021 12:40:06 PAGE 4   

 175   3                  Timer0_1S = 0;
 176   3                  Timer0_1S_Flag = 0; 
 177   3                  Delay_Ms_(10);//操作定时器前，将其标志位置0后稍微延时后再开启定时器能减少其出错概率
 178   3                  TR0 = 1;//开启定时器1
 179   3                  while(Timer0_1S_Flag < 9)
 180   3                  {                
 181   4                      //获取红外温度传感器的温度                    
 182   4                      MemRead(Temp_Hex);
 183   4                      Temp_Flo = Temp_Float(Temp_Hex);
 184   4                      if(Temp_Flo > Temp_MIN)
 185   4                      {//检测到有热源靠近后预热再测一次
 186   5                          Delay_Ms_(50);//延时50ms给传感器预热一下
 187   5                          MemRead(Temp_Hex);
 188   5                          Temp_Flo = Temp_Float(Temp_Hex); 
 189   5                          break;//跳出循环
 190   5                      }
 191   4                      Temp_Time = 0x39 - Timer0_1S_Flag;                
 192   4                      sprintf(LCD_TipWord_1,"靠近测温:%c",Temp_Time);                
 193   4                      LCD12864_Display(1,2,0,LCD_TipWord_1);//打印提示语
 194   4                  }
 195   3                  TR0 = 0;//使用完后关闭定时器            
 196   3                  Timer0_Init();
 197   3                  LED_GREEN = 1;//提示用户测温结束
 198   3                  Beep_Start(1,500);//让蜂鸣器响500ms
 199   3                  if(Temp_Flo > Temp_MIN)
 200   3                  {//只有这样才是读到体温了
 201   4                      sprintf(LCD_TipWord_1,"测得体温：%0.1f",Temp_Flo);                
 202   4                      LCD12864_Display(1,2,0,LCD_TipWord_1);//打印提示语
 203   4                  }else
 204   3                  {//没有读到体温就重来
 205   4                      sprintf(LCD_TipWord_1,"测温失败重刷卡",Temp_Flo);
 206   4                      LCD12864_Display(1,2,0,LCD_TipWord_1);//打印提示语              
 207   4                      Delay_Ms_(2000);//延时2S让提示语能被看清
 208   4                      LCD_Flag = 0;//程序执行完毕刷新LCD改变标志位 
 209   4                      Temp_Flo = 0;//及时清除上一次读取到的体温信息
 210   4                      continue;
 211   4                  }    
 212   3                  //将体温数据缓存到串口发送体温缓存区
 213   3                  for(i = 1;i < 4;i++)
 214   3                  {UART_Send_Temp[i] = Temp_Hex[i-1];}
 215   3                  UART_SendString(5,UART_Send_Temp);//串口发送体温数据
 216   3                  
 217   3                  //****体温数据传输监测****
 218   3                  LCD12864_Display(1,0,0,"测温上传。。");
 219   3                  Timer0_1S = 0;
 220   3                  Timer0_1S_Flag = 0; 
 221   3                  Delay_Ms_(10);//操作定时器前，将其标志位置0后稍微延时后再开启定时器能减少其出错概率
 222   3                  TR0 = 1;//开启定时器1
 223   3                  while(Temp_SDFlag == 0 && Timer0_1S_Flag < 2);
 224   3                  TR0 = 0;//使用完后关闭定时器            
 225   3                  Timer0_Init();
 226   3                  if(Temp_SDFlag == 1)
 227   3                  {
 228   4                      LCD12864_Display(1,0,0,"测温上传成功");
 229   4                      Temp_SDFlag = 0;//清除标志位
 230   4                  }else
 231   3                  {      
 232   4                      LCD12864_Display(1,0,0,"测温上传失败");
 233   4                      Beep_Start(3,1000);                                 
 234   4                      Temp_SDFlag = 0;//清除标志位
 235   4                      LCD_Flag = 0;//程序执行完毕刷新LCD改变标志位
 236   4                      continue;
C51 COMPILER V9.55   MAIN                                                                  05/11/2021 12:40:06 PAGE 5   

 237   4                  }
 238   3                  
 239   3                  //****体温异常监测****
 240   3                  if(Temp_Flo > Temp_MAX)
 241   3                  {
 242   4                      LCD12864_Display(1,1,0,"高温。。。。");//打印提示语
 243   4                      Timer0_1S = 0;
 244   4                      Timer0_1S_Flag = 0; 
 245   4                      LED_RED = 0;
 246   4                      Delay_Ms_(10);//操作定时器前，将其标志位置0后稍微延时后再开启定时器能减少其出错概率
 247   4                      TR0 = 1;//开启定时器1
 248   4                      while(SW2 == 1 && Timer0_1S_Flag < 5)
 249   4                      {
 250   5                          Beep_Start(1,1000);                    
 251   5                      }
 252   4                      LED_RED = 1;
 253   4                      TR0 = 0;//使用完后关闭定时器            
 254   4                      Timer0_Init();
 255   4                      
 256   4                  }else
 257   3                  {
 258   4                      LCD12864_Display(1,1,0,"添加中。。。");//打印提示语
 259   4                  }
 260   3                  Temp_Flo = 0;//及时清除上一次读取到的体温信息
 261   3                  
 262   3                  /************************以下为接收WiFi响应的代码************************/             
 263   3                  while(UART_HTTP_FLAG == 0);  
 264   3                  if(UART_HTTP_FLAG == 1)
 265   3                  {
 266   4                      LCD12864_Display(1,1,0,"添加。。成功");//打印提示语
 267   4                  }else if(UART_HTTP_FLAG == 2)
 268   3                  {
 269   4                      LCD12864_Display(1,1,0,"添加。。失败");//打印提示语
 270   4                  }
 271   3                  UART_HTTP_FLAG = 0;//清除标志位
 272   3                  Delay_Ms_(2000);//延时2秒为了让测温者能看见测温结果
 273   3                  LCD_Flag = 0;//程序执行完毕刷新LCD改变标志位             
 274   3              }
 275   2          }
 276   1      }
 277          
 278          /*串口中断函数主要写了一个接收的服务，接收信息长度为5，信息头是为0xaa，0x55，信息体在[2]，[3]是校验位*/
 279          void UART_NVIC() interrupt 4
 280          {        
 281   1          if(UART_ReceiveString(4,UART_BUF))//函数内含超时计时
 282   1          {
 283   2              //******以下是接收到WiFi串口准备完成的信息头*******
 284   2              if(UART_BUF[0] == 0xaa && UART_BUF[1] == 0x44 && UART_BUF[2] == 0x77 && UART_BUF[3] == UART_BUF[2]
             -)
 285   2              {
 286   3                  UART_Receive_CON = 0;
 287   3                  LCD12864_Display(1,3,0,"网络已中断");
 288   3                  memset(UART_BUF,0,sizeof(UART_BUF));//清空缓存区
 289   3              }
 290   2              else if(UART_BUF[0] == 0xaa && UART_BUF[1] == 0x44 && UART_BUF[2] == 0x88 && UART_BUF[3] == UART_B
             -UF[2])
 291   2              {
 292   3                  UART_Receive_CON = 1;
 293   3                  LCD12864_Display(1,3,0,"网络已连接");
 294   3                  memset(UART_BUF,0,sizeof(UART_BUF));//清空缓存区
 295   3              }
 296   2                  
C51 COMPILER V9.55   MAIN                                                                  05/11/2021 12:40:06 PAGE 6   

 297   2              //******以下是接收到WiFi串口准备完成的信息头*******
 298   2              else if(UART_BUF[0] == 0xaa && UART_BUF[1] == 0x55 && UART_BUF[2] == 0x99 && UART_BUF[3] == UART_B
             -UF[2])
 299   2              {            
 300   3                  UART_Receive_Red = UART_BUF[2];
 301   3                  memset(UART_BUF,0,sizeof(UART_BUF));//清空缓存区
 302   3              }
 303   2              
 304   2              //******以下是接收到体温传输无误的信息头*******
 305   2              else if(UART_BUF[0] == 0xaa && UART_BUF[1] == 0xbb && UART_BUF[2] == 0x88 && UART_BUF[3] == UART_B
             -UF[2])
 306   2              {
 307   3                  Temp_SDFlag = 1;           
 308   3              }
 309   2              else if(UART_BUF[0] == 0xaa && UART_BUF[1] == 0xbb && UART_BUF[2] == 0x77 && UART_BUF[3] == UART_B
             -UF[2])
 310   2              {
 311   3                  Temp_SDFlag = 2;            
 312   3              }
 313   2              
 314   2              //******以下是接收到WiFi_HTTP返回的信息头*******
 315   2              else if(UART_BUF[0] == 0xaa && UART_BUF[1] == 0x66 && UART_BUF[2] == 0x88 && UART_BUF[3] == UART_B
             -UF[2])
 316   2              {
 317   3                  UART_HTTP_FLAG = 1;           
 318   3              }
 319   2              else if(UART_BUF[0] == 0xaa && UART_BUF[1] == 0x66 && UART_BUF[2] == 0x77 && UART_BUF[3] == UART_B
             -UF[2])
 320   2              {
 321   3                  UART_HTTP_FLAG = 2;            
 322   3              }
 323   2          }
 324   1      }
 325          /*定时器0中断服务函数*/
 326          void Timer0_NVIC() interrupt 1
 327          {    
 328   1          TH0 = 0XDB;
 329   1          TL0 = 0XFF;//还原初值
 330   1          if(Timer0_1S < 100)//定时器0每10ms溢出一次故计100次即1s
 331   1          {Timer0_1S++;}
 332   1          else
 333   1          {
 334   2              Timer0_1S = 0;//清除计数
 335   2              Timer0_1S_Flag++;//标志位加1
 336   2          }
 337   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1679    ----
   CONSTANT SIZE    =    227    ----
   XDATA SIZE       =    150       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
